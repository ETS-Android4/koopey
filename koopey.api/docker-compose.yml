version: '3.8'

services:

  api:
    image: openjdk:11
    build:
      context: ./build/
    command: "apk --no-cache add ca-certificates gradle"
    working_dir: /home/www/api
    volumes:
      - ./api:/var/www/api

  elasticsearch:
    image: elasticsearch:8.0.0
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - localnetwork

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka1
    restart: always
    networks:
      broker-bridge:
        ipv4_address: 172.18.0.21
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
    volumes:
      - /home/broker/zookeeper-kafka-data/kafka1/data:/var/lib/kafka/data
      - /home/broker/conf/server1.properties:/etc/kafka/server.properties
    depends_on:
      - zookeeper

  kibana:
    image: kibana:8.0.0
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    depends_on:
      - elasticsearch
    networks:
      - localnetwork

  logstash:
    image: logstash:8.0.0
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - localnetwork

  mysql:
    image: mysql:8.0
    command:
      - mysql create database testdb
      - mysql SET PASSWORD FOR 'root' = PASSWORD('2gwUA0iRJz5!DW7W*@D%&hh8%eUdiiRT')
      - mysql CREATE USER 'koopey'@'localhost' IDENTIFIED BY '2gwUA0iRJz5!DW7W*@D%&hh8%eUdiiRT'
      - mysql GRANT ALL PRIVILEGES ON * . * TO 'koopey'@'localhost'

    volumes:
      - testdb:/var/lib/mysql
    environment:
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_USERNAME=${MYSQL_USERNAME}"
    ports:
      - 3306:3306

  zookeeper:
    image: zookeeper:3.4.9
    restart: always
    hostname: zookeeper
    networks:
      broker-bridge:
        ipv4_address: 172.18.0.11
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - /home/broker/zookeeper-kafka-data/zookeeper/data:/data
      - /home/broker/zookeeper-kafka-data/zookeeper/datalog:/datalog

volumes:
  elastic_data: {}
  testdb:

networks:
  broker-bridge:
    external:
      name: broker
  localnetwork:
