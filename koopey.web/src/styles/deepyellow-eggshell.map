{
	"version": 3,
	"file": "scss/deepyellow-eggshell.css",
	"sources": [
		"scss/deepyellow-eggshell.scss",
		"/Users/Scott/Desktop/mylocal-19-10-2017/mylocal/FrontEnd/node_modules/@angular/material/_theming.scss"
	],
	"sourcesContent": [
		"//@import '~@angular/material/theming';\r\n//@import '/Users/Scott/Source/Repos/mylocal/FrontEnd/node_modules/@angular/material/theming';\r\n@import '/Users/Scott/Desktop/mylocal-19-10-2017/mylocal/FrontEnd/node_modules/@angular/material/theming';\r\n/* Plus imports for other components in your app.*/\r\n\r\n/*Include the common styles for Angular Material. We include this here so that you only\r\nhave to load a single css file for Angular Material in your app.\r\nBe sure that you only ever include this mixin once!*/\r\n@include mat-core();\r\n\r\n$mat-custom-yellow: (\r\n  50: #f1f8e9,\r\n  100: #fff9ae,\r\n  200: #f8ed62,\r\n  300: #f8ed62,\r\n  400: #e9d700,\r\n  500: #e9d700,\r\n  600: #dab600,\r\n  700: #dab600,\r\n  800: #a98600,\r\n  900: #a98600,\r\n  A100: #fff9ae,\r\n  A200: #b2ff59,\r\n  A400: #BFAE48,\r\n  A700: #BFAE48,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: white,\r\n    800: white,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);\r\n\r\n/* Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n hue.*/\r\n$primary: mat-palette($mat-custom-yellow);\r\n$accent:  mat-palette($mat-grey, A200, A100, A400);\r\n\r\n/* The warn palette is optional (defaults to red).*/\r\n$warn:    mat-palette($mat-red);\r\n\r\n/* Create the theme object (a Sass map containing all of the palettes).*/\r\n$theme: mat-light-theme($primary, $accent, $warn);\r\n\r\n/* Include theme styles for core and each component used in your app.\r\nAlternatively, you can import and @include the theme mixins for each component\r\nthat you are using.*/\r\n@include angular-material-theme($theme);\r\n\r\n/*$mat-custom-template: (\r\n  50: #f1f8e9,\r\n  100: #dcedc8,\r\n  200: #c5e1a5,\r\n  300: #aed581,\r\n  400: #9ccc65,\r\n  500: #8bc34a,\r\n  600: #7cb342,\r\n  700: #689f38,\r\n  800: #558b2f,\r\n  900: #33691e,\r\n  A100: #ccff90,\r\n  A200: #b2ff59,\r\n  A400: #76ff03,\r\n  A700: #64dd17,\r\n  contrast: (\r\n    50: $black-87-opacity,\r\n    100: $black-87-opacity,\r\n    200: $black-87-opacity,\r\n    300: $black-87-opacity,\r\n    400: $black-87-opacity,\r\n    500: $black-87-opacity,\r\n    600: $black-87-opacity,\r\n    700: white,\r\n    800: white,\r\n    900: white,\r\n    A100: $black-87-opacity,\r\n    A200: $black-87-opacity,\r\n    A400: $black-87-opacity,\r\n    A700: $black-87-opacity,\r\n  )\r\n);*/\r\n",
		"// Import all the theming functionality.\n// Core styles that can be used to apply material design treatments to any element.\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    text-transform: none;\n    width: 1px;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n@mixin cdk-high-contrast {\n  @media screen and (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n// Typography\n$mat-body-font-size-base: 14px !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n$_umbra-color: rgba(black, 0.2);\n$_penumbra-color: rgba(black, 0.14);\n$_ambient-color: rgba(black, 0.12);\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n$_umbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_umbra-color}',\n  1: '0px 2px 1px -1px #{$_umbra-color}',\n  2: '0px 3px 1px -2px #{$_umbra-color}',\n  3: '0px 3px 3px -2px #{$_umbra-color}',\n  4: '0px 2px 4px -1px #{$_umbra-color}',\n  5: '0px 3px 5px -1px #{$_umbra-color}',\n  6: '0px 3px 5px -1px #{$_umbra-color}',\n  7: '0px 4px 5px -2px #{$_umbra-color}',\n  8: '0px 5px 5px -3px #{$_umbra-color}',\n  9: '0px 5px 6px -3px #{$_umbra-color}',\n  10: '0px 6px 6px -3px #{$_umbra-color}',\n  11: '0px 6px 7px -4px #{$_umbra-color}',\n  12: '0px 7px 8px -4px #{$_umbra-color}',\n  13: '0px 7px 8px -4px #{$_umbra-color}',\n  14: '0px 7px 9px -4px #{$_umbra-color}',\n  15: '0px 8px 9px -5px #{$_umbra-color}',\n  16: '0px 8px 10px -5px #{$_umbra-color}',\n  17: '0px 8px 11px -5px #{$_umbra-color}',\n  18: '0px 9px 11px -5px #{$_umbra-color}',\n  19: '0px 9px 12px -6px #{$_umbra-color}',\n  20: '0px 10px 13px -6px #{$_umbra-color}',\n  21: '0px 10px 13px -6px #{$_umbra-color}',\n  22: '0px 10px 14px -6px #{$_umbra-color}',\n  23: '0px 11px 14px -7px #{$_umbra-color}',\n  24: '0px 11px 15px -7px #{$_umbra-color}'\n);\n\n$_penumbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\n);\n\n$_ambient-elevation-map: (\n  0: '0px 0px 0px 0px #{$_ambient-color}',\n  1: '0px 1px 3px 0px #{$_ambient-color}',\n  2: '0px 1px 5px 0px #{$_ambient-color}',\n  3: '0px 1px 8px 0px #{$_ambient-color}',\n  4: '0px 1px 10px 0px #{$_ambient-color}',\n  5: '0px 1px 14px 0px #{$_ambient-color}',\n  6: '0px 1px 18px 0px #{$_ambient-color}',\n  7: '0px 2px 16px 1px #{$_ambient-color}',\n  8: '0px 3px 14px 2px #{$_ambient-color}',\n  9: '0px 3px 16px 2px #{$_ambient-color}',\n  10: '0px 4px 18px 3px #{$_ambient-color}',\n  11: '0px 4px 20px 3px #{$_ambient-color}',\n  12: '0px 5px 22px 4px #{$_ambient-color}',\n  13: '0px 5px 24px 4px #{$_ambient-color}',\n  14: '0px 5px 26px 4px #{$_ambient-color}',\n  15: '0px 6px 28px 5px #{$_ambient-color}',\n  16: '0px 6px 30px 5px #{$_ambient-color}',\n  17: '0px 6px 32px 5px #{$_ambient-color}',\n  18: '0px 7px 34px 6px #{$_ambient-color}',\n  19: '0px 7px 36px 6px #{$_ambient-color}',\n  20: '0px 8px 38px 7px #{$_ambient-color}',\n  21: '0px 8px 40px 7px #{$_ambient-color}',\n  22: '0px 8px 42px 7px #{$_ambient-color}',\n  23: '0px 9px 44px 8px #{$_ambient-color}',\n  24: '0px 9px 46px 8px #{$_ambient-color}'\n);\n\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a will-change rule.\n$mat-elevation-property: box-shadow !default;\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  #{$mat-elevation-property}: #{map-get($_umbra-elevation-map, $zValue)},\n                             #{map-get($_penumbra-elevation-map, $zValue)},\n                             #{map-get($_ambient-elevation-map, $zValue)};\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n//   will-change: $mat-elevation-property, opacity;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return #{$mat-elevation-property} #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n  will-change: $mat-elevation-property;\n}\n\n\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n\n    // Note: we prefer viewport units, because they aren't being offset by the global scrollbar.\n    height: 100vh;\n    width: 100vw;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n\n    // TODO(jelbourn): figure out if there are actually spec'ed colors for both light and dark\n    // themes here. Currently using the values from AngularJS Material.\n    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0.48;\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    background: none;\n  }\n}\n\n// Color palettes from the Material Design spec.\n// See https://www.google.com/design/spec/style/color.html\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n$black-87-opacity: rgba(black, 0.87);\n$white-87-opacity: rgba(white, 0.87);\n$black-12-opacity: rgba(black, 0.12);\n$white-12-opacity: rgba(white, 0.12);\n$black-6-opacity: rgba(black, 0.06);\n$white-6-opacity: rgba(white, 0.06);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: $white-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: white,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-grey: (\n  0: #ffffff,\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  1000: #000000,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    0: $black-87-opacity,\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    1000: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: white,\n    500: white,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: $black-12-opacity,\n  raised-button: white,\n  focused-button: $black-6-opacity,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: $white-12-opacity,\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $white-6-opacity,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: map_get($mat-grey, 1000),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:            black,\n  divider:         $black-12-opacity,\n  dividers:        $black-12-opacity,\n  disabled:        rgba(black, 0.38),\n  disabled-button: rgba(black, 0.38),\n  disabled-text:   rgba(black, 0.38),\n  hint-text:       rgba(black, 0.38),\n  secondary-text:  rgba(black, 0.54),\n  icon:            rgba(black, 0.54),\n  icons:           rgba(black, 0.54),\n  text:            rgba(black, 0.87)\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:            white,\n  divider:         $white-12-opacity,\n  dividers:        $white-12-opacity,\n  disabled:        rgba(white, 0.3),\n  disabled-button: rgba(white, 0.3),\n  disabled-text:   rgba(white, 0.3),\n  hint-text:       rgba(white, 0.3),\n  secondary-text:  rgba(white, 0.7),\n  icon:            white,\n  icons:           white,\n  text:            white\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n  $opacity: if($opacity == null, opacity($color), $opacity);\n\n  @return rgba($color, $opacity);\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n  // The host element of an md-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripple divs it creates inside itself are correctly positioned.\n  .mat-ripple {\n    overflow: hidden;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n  }\n}\n\n\n// A mixin, which generates temporary ink ripple on a given component.\n// To be removed once the real ripple is applied to all elements.\n// When $bindToParent is set to true, it will check for the focused class on the same selector as you included\n// that mixin.\n// It is also possible to specify the color palette of the temporary ripple. By default it uses the\n// accent palette for its background.\n@mixin mat-temporary-ink-ripple($component, $bindToParent: false) {\n  // TODO(mtlin): Replace when ink ripple component is implemented.\n  // A placeholder ink ripple, shown when keyboard focused.\n  .mat-ink-ripple {\n    border-radius: 50%;\n    opacity: 0;\n    height: 48px;\n    left: 50%;\n    overflow: hidden;\n    pointer-events: none;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity ease 280ms, background-color ease 280ms;\n    width: 48px;\n  }\n\n  // Fade in when radio focused.\n  #{if($bindToParent, '&', '')}.mat-#{$component}-focused .mat-ink-ripple {\n    opacity: 1;\n  }\n\n  // TODO(mtlin): This corresponds to disabled focus state, but it's unclear how to enter into\n  // this state.\n  #{if($bindToParent, '&', '')}.mat-#{$component}-disabled .mat-ink-ripple {\n    background-color: #000;\n  }\n}\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n/** The mixins below are shared between md-menu and md-select */\n\n// menu width must be a multiple of 56px\n$mat-menu-overlay-min-width: 112px !default;   // 56 * 2\n$mat-menu-overlay-max-width: 280px !default;   // 56 * 5\n\n$mat-menu-item-height: 48px !default;\n$mat-menu-font-size: 16px !default;\n$mat-menu-side-padding: 16px !default;\n$mat-menu-icon-margin: 16px !default;\n\n@mixin mat-menu-base() {\n  @include mat-elevation(8);\n  min-width: $mat-menu-overlay-min-width;\n  max-width: $mat-menu-overlay-max-width;\n\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;   // for momentum scroll on mobile\n}\n\n@mixin mat-menu-item-base() {\n  @include mat-truncate-line();\n\n  // Needs to be a block for the ellipsis to work.\n  display: block;\n  line-height: $mat-menu-item-height;\n  height: $mat-menu-item-height;\n  padding: 0 $mat-menu-side-padding;\n\n  font-size: $mat-menu-font-size;\n  font-family: $mat-font-family;\n  text-align: left;\n  text-decoration: none;   // necessary to reset anchor tags\n\n  &[disabled] {\n    cursor: default;\n  }\n\n  [dir='rtl'] & {\n    text-align: right;\n  }\n\n  .mat-icon {\n    margin-right: $mat-menu-icon-margin;\n\n    [dir='rtl'] & {\n      margin-left: $mat-menu-icon-margin;\n      margin-right: 0;\n    }\n  }\n}\n\n/**\n * This mixin adds the correct panel transform styles based\n * on the direction that the menu panel opens.\n */\n@mixin mat-menu-positions() {\n  &.mat-menu-after.mat-menu-below {\n    transform-origin: left top;\n  }\n\n  &.mat-menu-after.mat-menu-above {\n    transform-origin: left bottom;\n  }\n\n  &.mat-menu-before.mat-menu-below {\n    transform-origin: right top;\n  }\n\n  &.mat-menu-before.mat-menu-above {\n    transform-origin: right bottom;\n  }\n\n  [dir='rtl'] & {\n    &.mat-menu-after.mat-menu-below {\n      transform-origin: right top;\n    }\n\n    &.mat-menu-after.mat-menu-above {\n      transform-origin: right bottom;\n    }\n\n    &.mat-menu-before.mat-menu-below {\n      transform-origin: left top;\n    }\n\n    &.mat-menu-before.mat-menu-above {\n      transform-origin: left bottom;\n    }\n  }\n}\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n/* stylelint-enable */\n\n\n\n/**\n * This mixin contains shared option styles between the select and\n * autocomplete components.\n */\n@mixin mat-option() {\n  .mat-option {\n    @include mat-menu-item-base();\n    position: relative;\n    cursor: pointer;\n    outline: none;\n\n    &[aria-disabled='true'] {\n      @include user-select(none);\n      cursor: default;\n    }\n  }\n\n  .mat-option-ripple {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    // Disable pointer events for the ripple container because the container will overlay the\n    // user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n\n    // In high contrast mode this completely covers the text.\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  .mat-option-pseudo-checkbox {\n    $margin: $mat-menu-side-padding / 2;\n    margin-right: $margin;\n\n    [dir='rtl'] & {\n      margin-left: $margin;\n      margin-right: 0;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    &:hover:not(.mat-option-disabled), &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-selected.mat-primary, .mat-primary &.mat-selected {\n      color: mat-color($primary);\n    }\n\n    &.mat-selected.mat-accent, .mat-accent &.mat-selected {\n      color: mat-color($accent);\n    }\n\n    &.mat-selected.mat-warn, .mat-warn &.mat-selected {\n      color: mat-color($warn);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n}\n\n\n\n@mixin _mat-pseudo-checkbox-inner-content-theme($theme, $pallete-name) {\n  $pallete: map-get($theme, $pallete-name);\n  $color: mat-color($pallete);\n\n  .mat-pseudo-checkbox-checked.mat-#{$pallete-name},\n  .mat-pseudo-checkbox-indeterminate.mat-#{$pallete-name},\n  .mat-#{$pallete-name} .mat-pseudo-checkbox-checked,\n  .mat-#{$pallete-name} .mat-pseudo-checkbox-indeterminate {\n    background: $color;\n  }\n}\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, primary);\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, accent);\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, warn);\n\n  .mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core() {\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .mat-elevation-z#{$zValue} {\n      @include mat-elevation($zValue);\n    }\n  }\n\n  @include mat-ripple();\n  @include mat-option();\n  @include cdk-a11y();\n  @include cdk-overlay();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Wrapper element that provides the theme background when the\n  // user's content isn't inside of a `md-sidenav-container`.\n  .mat-app-background {\n    $background: map-get($theme, background);\n    background-color: mat-color($background, background);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  .mat-theme-loaded-marker {\n    display: none;\n  }\n}\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    .mat-option {\n      &.mat-selected:not(.mat-active) {\n        background: mat-color($background, card);\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n\n// Applies a focus style to an md-button element for each of the supported palettes.\n@mixin _mat-button-focus-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary, 0.12);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent, 0.12);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn, 0.12);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: 0.2) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an md-button element for each of the supported palettes.\n@mixin _mat-button-theme-color($theme, $property, $color: 'default') {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $color);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $color);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $color);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button {\n    background: transparent;\n\n    @include _mat-button-focus-color($theme);\n    @include _mat-button-theme-color($theme, 'color');\n  }\n\n  .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default properties when not using any [color] value.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-color($theme, 'color', default-contrast);\n    @include _mat-button-theme-color($theme, 'background-color');\n\n    // Add ripple effect with contrast color to buttons that don't have a focus overlay.\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  // Add ripple effect with default color to flat buttons, which also have a focus overlay.\n  .mat-button {\n    @include _mat-button-ripple-color($theme, default, 0.1);\n  }\n\n  // Add ripple effect with default color to the icon button. Ripple color needs to be stronger\n  // since the icon button doesn't have a focus overlay.\n  .mat-icon-button {\n    @include _mat-button-ripple-color($theme, default);\n  }\n\n  // TODO(devversion): The color class accent should be just set from TS code. No need for this.\n  .mat-fab, .mat-mini-fab {\n    background-color: mat-color($accent);\n    color: mat-color($accent, default-contrast);\n\n    // Button fab elements are using the accent palette by default. The color classes won't\n    // be set on the element. To have a proper ripple color for those, we set the ripple color.\n    .mat-ripple-element {\n      background-color: mat-color($accent, default-contrast, 0.2);\n    }\n  }\n}\n\n\n\n\n\n\n// Applies a focus style to an md-button-toggle element for each of the supported palettes.\n@mixin _mat-button-toggle-focus-color($theme) {\n  $background: map-get($theme, background);\n\n  .mat-button-toggle-focus-overlay {\n    background-color: mat-color($background, focused-button);\n  }\n}\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    &.cdk-focused {\n      @include _mat-button-toggle-focus-color($theme);\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, base);\n  }\n\n  .mat-button-toggle-disabled {\n    background-color: mat-color($background, disabled-button-toggle);\n    color: mat-color($foreground, disabled-button);\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color(map-get($theme, foreground), secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an attribute on the SVG in order\n    // for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked, &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary, 0.26);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent, 0.26);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn, 0.26);\n    }\n  }\n}\n\n\n\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Use spec-recommended color for regular foreground, and utilise contrast color for a grey very\n  // close to the selected spec since no guidance is provided and to ensure palette consistency.\n  $light-foreground: rgba(0, 0, 0, 0.87);\n  $light-selected-foreground: mat-contrast($mat-grey, 600);\n\n  // The spec only provides guidance for light-themed chips. When inside of a dark theme, fall back\n  // to standard background and foreground colors.\n  $unselected-background: if($is-dark-theme, mat-color($background, card), #e0e0e0);\n  $unselected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-foreground);\n\n  $selected-background: if($is-dark-theme, mat-color($background, app-bar), #808080);\n  $selected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-selected-foreground);\n\n  .mat-chip:not(.mat-basic-chip) {\n    background-color: $unselected-background;\n    color: $unselected-foreground;\n  }\n\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip) {\n    background-color: $selected-background;\n    color: $selected-foreground;\n\n    &.mat-primary {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      background-color: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n\n    &.mat-warn {\n      background-color: mat-color($warn);\n      color: mat-color($warn, default-contrast);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-datepicker-theme($theme) {\n  $primary: map-get($theme, primary);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  $mat-datepicker-selected-today-box-shadow-width: 1px;\n  $mat-datepicker-selected-fade-amount: 0.6;\n  $mat-datepicker-today-fade-amount: 0.2;\n\n  .mat-calendar {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-next-button,\n  .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n\n    .mat-calendar-body-disabled > &:not(.mat-calendar-body-selected) {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  :not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($primary);\n    color: mat-color($primary, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: fade-out(mat-color($primary), $mat-datepicker-selected-fade-amount);\n  }\n\n  .mat-calendar-body-today {\n    &:not(.mat-calendar-body-selected) {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n\n    &.mat-calendar-body-selected {\n      box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                  mat-color($primary, default-contrast);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    border-color: fade-out(mat-color($foreground, hint-text), $mat-datepicker-today-fade-amount);\n  }\n}\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n\n  .mat-dialog-container {\n    background: mat-color($background, dialog);\n  }\n}\n\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Placeholder colors. Required is used for the `*` star shown in the placeholder.\n  $input-placeholder-color: mat-color($foreground, hint-text);\n  $input-floating-placeholder-color: mat-color($primary);\n  $input-required-placeholder-color: mat-color($accent);\n\n  // Underline colors.\n  $input-underline-color: mat-color($foreground, divider);\n  $input-underline-color-accent: mat-color($accent);\n  $input-underline-color-warn: mat-color($warn);\n  $input-underline-focused-color: mat-color($primary);\n\n  .mat-input-placeholder {\n    color: $input-placeholder-color;\n  }\n\n  // :focus is applied to the input, but we apply mat-focused to the other elements\n  // that need to listen to it.\n  .mat-focused .mat-input-placeholder {\n    color: $input-floating-placeholder-color;\n\n    &.mat-accent {\n      color: $input-underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $input-underline-color-warn;\n    }\n  }\n\n  .mat-input-element:disabled {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  // See mat-input-placeholder-floating mixin in input.scss\n  input.mat-input-element:-webkit-autofill + .mat-input-placeholder,\n  .mat-focused .mat-input-placeholder.mat-float {\n    .mat-placeholder-required {\n      color: $input-required-placeholder-color;\n    }\n  }\n\n  .mat-input-underline {\n    border-color: $input-underline-color;\n\n    .mat-input-ripple {\n      background-color: $input-underline-focused-color;\n\n      &.mat-accent {\n        background-color: $input-underline-color-accent;\n      }\n      &.mat-warn {\n        background-color: $input-underline-color-warn;\n      }\n    }\n  }\n\n  // Styling for the error state of the input container. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-input-invalid {\n    .mat-input-placeholder,\n    .mat-placeholder-required {\n      color: $input-underline-color-warn;\n    }\n\n    .mat-input-underline {\n      border-color: $input-underline-color-warn;\n    }\n\n    .mat-input-ripple {\n      background-color: $input-underline-color-warn;\n    }\n  }\n\n  .mat-input-error {\n    color: $input-underline-color-warn;\n  }\n}\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list, .mat-nav-list {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-nav-list .mat-list-item-content {\n    &:hover, &.mat-list-item-focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-content {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      color: mat-color($foreground, 'disabled');\n    }\n\n    .mat-icon {\n      color: mat-color($foreground, 'icon');\n      vertical-align: middle;\n    }\n\n    &:hover:not([disabled]), &:focus:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    background: #{_mat-progress-bar-buffer($primary, lighter)};\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      background: #{_mat-progress-bar-buffer($accent, lighter)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      background: #{_mat-progress-bar-buffer($warn, lighter)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n// TODO(josephperrott): Find better way to inline svgs.\n// In buffer mode a repeated SVG object is used as a background.\n// Each of the following defines the SVG object for each of the class defined colors.\n//\n// The string is a URL encoded version of:\n//\n// <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n//      version=\"1.1\" x=\"0px\" y=\"0px\" enable-background=\"new 0 0 5 2\"\n//      xml:space=\"preserve\" viewBox=\"0 0 5 2\" preserveAspectRatio=\"none slice\">\n//   <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"{INJECTED_COLOR}\"/>\n// </svg>\n@function _mat-progress-bar-buffer($palette, $hue) {\n  $color: mat-color($palette, $hue) + '';\n\n  // We also need to escape the hash in hex colors,\n  // otherwise IE will throw an XML error.\n  @if str-index($color, '#') == 1 {\n    $color: '%23' + str-slice($color, 2);\n  }\n\n  $result: '' +\n    'data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2F' +\n    'www.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%2' +\n    '7%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%' +\n    '3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none' +\n    '%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27' +\n    $color + '%27%2F%3E%3C%2Fsvg%3E';\n\n  @return url($result);\n}\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    path {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent path {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn path {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($accent);\n  }\n\n  .mat-radio-disabled .mat-radio-outer-circle {\n    border-color: mat-color($foreground, disabled);\n  }\n\n  .mat-radio-inner-circle {\n    background-color: mat-color($accent);\n  }\n\n  .mat-radio-ripple .mat-ripple-element {\n    background-color: mat-color($accent, 0.26);\n  }\n\n  .mat-radio-disabled {\n    .mat-radio-ripple .mat-ripple-element, .mat-radio-inner-circle {\n      background-color: mat-color($foreground, disabled);\n    }\n  }\n}\n\n\n\n\n@mixin _mat-select-inner-content-theme($palette) {\n  $color: mat-color($palette);\n\n  .mat-select-trigger, .mat-select-arrow {\n    color: $color;\n  }\n\n  .mat-select-underline {\n    background-color: $color;\n  }\n}\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-trigger,\n  .mat-select-arrow {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-select-underline {\n    background-color: mat-color($foreground, divider);\n  }\n\n  .mat-select-disabled .mat-select-value,\n  .mat-select-arrow,\n  .mat-select-trigger {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-select-content, .mat-select-panel-done-animating {\n    background: mat-color($background, card);\n  }\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select:focus:not(.mat-select-disabled) {\n    &.mat-primary {\n      @include _mat-select-inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-select-inner-content-theme($accent);\n    }\n  }\n\n  .mat-select:focus:not(.mat-select-disabled).mat-warn,\n  .mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) {\n    @include _mat-select-inner-content-theme($warn);\n  }\n}\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // We use invert() here to have the darken the background color expected to be used. If the\n  // background is light, we use a dark backdrop. If the background is dark, \n  // we use a light backdrop.\n  $sidenav-backdrop-color: invert(mat-color($background, card, 0.6)) !default;\n  $sidenav-background-color: mat-color($background, dialog) !default;\n  $sidenav-container-background-color:  mat-color($background, background) !default;\n  $sidenav-push-background-color: mat-color($background, dialog) !default;\n\n  .mat-sidenav-container {\n    background-color: $sidenav-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-sidenav {\n    background-color: $sidenav-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-sidenav-push {\n      background-color: $sidenav-push-background-color;\n    }\n  }\n\n  .mat-sidenav-backdrop.mat-sidenav-shown {\n    background-color: $sidenav-backdrop-color;\n  }\n}\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  // Do not apply the checked colors if the toggle is disabled, because the specificity would be to high for\n  // the disabled styles.\n  &.mat-checked:not(.mat-disabled) {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      background-color: mat-color($palette, $thumb-checked-hue, 0.5);\n    }\n  }\n}\n\n// Applies the specified colors to the slide-toggle ripple elements.\n@mixin _mat-slide-toggle-ripple($palette, $ripple-unchecked-color, $ripple-checked-color) {\n  &:not(.mat-checked) .mat-ripple-element {\n    background-color: $ripple-unchecked-color;\n  }\n  .mat-ripple-element {\n    background-color: $ripple-checked-color;\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues based on the specs, which prescribe different hues for dark and light themes\n  // https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $thumb-normal-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: if($is-dark, 200, 500);\n  $thumb-disabled-hue: if($is-dark, 800, 400);\n\n  $bar-normal-color: mat-color($foreground, disabled);\n  $bar-disabled-color: if($is-dark, rgba(white, 0.12), rgba(black, 0.1));\n\n  // Ripple colors are based on the current palette and the state of the slide-toggle.\n  // See https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $ripple-checked-opacity: 0.12;\n  $ripple-unchecked-color: mat-color($foreground, base, if($is-dark, 0.12, 0.06));\n  $ripple-primary-color: mat-color($primary, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-accent-color: mat-color($accent, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-warn-color: mat-color($warn, $thumb-checked-hue, $ripple-checked-opacity);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n    @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-accent-color);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-primary-color);\n    }\n  \n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-warn-color);\n    }\n\n  }\n\n  .mat-disabled {\n    .mat-slide-toggle-thumb {\n      // The thumb of the slide-toggle always uses the hue 400 of the grey palette in dark or light themes.\n      // Since this is very specific to the slide-toggle component, we're not providing\n      // it in the background palette.\n      background-color: mat-color($mat-grey, $thumb-disabled-hue);\n    }\n    .mat-slide-toggle-bar {\n      background-color: $bar-disabled-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    background-color: mat-color($mat-grey, $thumb-normal-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-normal-color;\n  }\n}\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  $mat-slider-off-color: rgba(black, 0.26);\n  $mat-slider-off-focused-color: rgba(black, 0.38);\n  $mat-slider-disabled-color: rgba(black, 0.26);\n  $mat-slider-labeled-min-value-thumb-color: black;\n  $mat-slider-labeled-min-value-thumb-label-color: rgba(black, 0.26);\n  $mat-slider-focus-ring-color: rgba(mat-color($accent), 0.2);\n  $mat-slider-focus-ring-min-value-color: rgba(black, 0.12);\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n}\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label:focus {\n    background-color: mat-color($primary, lighter, 0.3);\n  }\n\n  .mat-ink-bar {\n    background-color: mat-color($primary);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n}\n"
	],
	"mappings": "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",
	"names": []
}